command echo -e "# +++++++++ loading \e[0;34m${BASH_SOURCE[0]}:$LINENO \e[0;0m..."

EXT_DIR="/home/xlshen/scratch"
BASH_DIR="$(echo ${BASH_SOURCE[0]}| sed 's#/setup.sh##g')"

# create special folders
[[ ! -d ${EXT_DIR} ]] && {
    command echo -e "\e[1;31mError : \e[1;34mSCRATCH_DIR does not exist: \e[0;33m${EXT_DIR}\e[0;0m"
    return 1
}

function generate_path_config(){
    local TEMP_DIR="${EXT_DIR}/tmp"                 #  map to : "${EXT_DIR}/tmp/cache/docker_tmp/xxx"
    local BACKUP_DIR="${EXT_DIR}/backup"
    local CACHE_DIR="${EXT_DIR}/cache"
    local TEST_DIR="${EXT_DIR}/test"

    [[ ! -d ${EXT_DIR}/tmp/to_del ]]    && mkdir -p ${EXT_DIR}/tmp/to_del
    [[ ! -d ${EXT_DIR}/backup ]]        && mkdir -p ${EXT_DIR}/backup
    [[ ! -d ${EXT_DIR}/cache ]]         && mkdir -p ${EXT_DIR}/cache
    [[ ! -d ${EXT_DIR}/test ]]          && mkdir -p ${EXT_DIR}/test && cp ${BASH_DIR}/test/_test_bash.sh ${EXT_DIR}/test/

    {
        echo "#!/bin/bash"
        echo "# [ $(date +%Y-%m-%d\ %H:%M:%S) ] auto-generated by ${BASH_SOURCE[0]}:$LINENO"
        echo "# It contains the path configuration for bash environment."
        echo '[[ ! -v disable_bash_script_io ]] && echo -e "# +++++++++ loading ${BASH_SOURCE[0]}:${LINENO}  \e[0;30m:  ${BASH_SOURCE[1]##*/}:${BASH_LINENO[0]} \e[0;0m" '
        echo
        echo "export EXT_DIR=\"${EXT_DIR}\""
        echo "export BASH_DIR=\"${BASH_DIR}\""
        echo "export TEMP_DIR=\"${TEMP_DIR}\""
        echo "export BACKUP_DIR=\"${BACKUP_DIR}\""
        echo "export CACHE_DIR=\"${CACHE_DIR}\""
        echo "export TEST_DIR=\"${TEST_DIR}\""
        echo
        echo '[[ ! -v disable_bash_script_io ]] && echo -e "# --------- leaving ${BASH_SOURCE[0]}:${LINENO}  "'
    } > ${BASH_DIR}/init/script_path_config.sh
    command echo -e "# \e[0;34mPath config :\e[1;31m${BASH_DIR}/init/script_path_config.sh \e[0;0m"
}

function link_init_file() {    
    # echo "\e[0;32mlink file : \e[0;35m$1 => \e[0;33m$2 \e[0;0m"
    [[ -z $1 ]]   && { echo " # link_init_file: first argument '$1' is empty!"; return 1; }
    [[ -z $2 ]]   && { echo " # link_init_file: second argument '$2' is empty!"; return 1; }
    [[ ! -f $1 ]] && { echo " # link_init_file: first argument '$1' is not a file!"; return 1; }
    [[ -d $2 ]]   && { echo " # link_init_file: second argument '$2' is a directory, not a file!"; return 1; }

    printf "\e[0;32m%-13s: \e[0;35m%-32s \e[0;0m<= \e[0;33m%s \e[0;0m\n" "link file"   $2  $1
    [[ -f $2 ]] && rm -f   $2
    [[ -L $2 ]] && rm -f   $2
    [[ -e $2 ]] && rm -rf  $2
    [[ -d $2 ]] && rm -rf  $2
    # echo "ln -s   $1       $2"
    # echo "ln -s   $1       $2"
    ln -s   $1       $2
}

function link_init_folder() {
    # echo "\e[0;32mlink folder : \e[0;35m$1 => \e[0;33m$2 \e[0;0m"
    [[ -z $1 ]]   && { echo " # link_init_folder: first argument '$1' is empty!"; return 1; }
    [[ -z $2 ]]   && { echo " # link_init_folder: second argument '$2' is empty!"; return 1; }
    [[ ! -d $1 ]] && { echo " # link_init_folder: first argument '$1' is not a directory!"; return 1; }
    [[ -f $2 ]]   && { echo " # link_init_folder: second argument '$2' is a file, not a directory!"; return 1; }
    printf "\e[0;32m%-13s: \e[0;35m%-32s \e[0;0m<= \e[0;33m%s \e[0;0m\n" "link folder"   $2  $1
    [[ -d $2 ]] && rm -rf  $2
    ln -s   $1       $2
}

generate_path_config
link_init_file      ${BASH_DIR}/init/bashrc                           ${HOME}/.bashrc
link_init_file      ${BASH_DIR}/init/bashrc                           ${HOME}/.profile
link_init_file      ${BASH_DIR}/app/gdb/gdb_init.gdb                  ${HOME}/.gdbinit
link_init_file      ${BASH_DIR}/app/gdb/cuda_gdb/cuda-gdbinit.gdb     ${HOME}/.cuda-gdbinit
link_init_file      ${BASH_DIR}/app/pdb/python_pdb_init.py            ${HOME}/.pdbrc
link_init_file      ${BASH_DIR}/app/git/gitconfig                     ${HOME}/.gitconfig
link_init_file      ${BASH_DIR}/app/gdb/test/ddd_init.gdb             ${HOME}/.dddinit
link_init_file      ${EXT_DIR}/tmp/cache                              ${HOME}/.cache
link_init_file      ${EXT_DIR}/temp                                   ${HOME}/temp
link_init_folder    ${EXT_DIR}/myDepency/local_map                    ${HOME}/.local

# https://confluence.nvidia.com/pages/viewpage.action?spaceKey=GCA&title=CASK+6+Build#CASK6Build-BuildingandtestingwithAMODELonLSF
link_init_file      ${BASH_DIR}/nvidia/loadEnv/farm_lsf_nvprojectname ${HOME}/.nvprojectname


#
# find ${HOME} -maxdepth 1 -type f  -iname "*history"  -print
# ${HOME}/.history
# ${HOME}/.bash_history
# ${HOME}/.gdb_history
# ${HOME}/.pdbhistory
# ${HOME}/.python_history
# ${HOME}/.zshrc
# ${HOME}/.gitconfig

command echo -e "# --------- leaving \e[0;34m${BASH_SOURCE[0]}:$LINENO  \e[0;0m"

