bash_script_i

if [[ ! -f "$1" ]] ; then
    dumpcmdline
    dumperr "${brown} $1 ${green} not existed."
    return
fi

tmp_build_dir=$(get_build_root_from_subfolder)
[[ -n $tmp_build_dir ]] && tmp_log_dir=${tmp_build_dir}/local_logs || tmp_log_dir="${TEMP_DIR}/to_del/script_log"
if [[ ! -d "${tmp_log_dir}/" ]]; then
    mkdir -p "${tmp_log_dir}"
fi

debuginfo "$@"
# dumppos
func_name=

log_path="${tmp_log_dir}/${1##*/}.`date "+%Y%m%d_%H%M"`.log"
dumpinfo "log    :${blue} ${brown}${log_path}${end}"
date "+%Y%m%d_%H%M" >| ${log_path}
{
    if [[ -f "$1" ]] ; then
        dumpcmd "source $* "
        # fix env var 'cur_build_dir' value change
        source  "$@"
        # debugkey cur_build_dir
    else
        dumpcmd "$*"
        func_name=`type $1 | grep "is aliased to" | sed 's#.*\([^a-zA-Z0-9_].\)#\1#g' | sed 's#.\(.*\).#\1#g'`
        if [[ "${func_name}" != "" ]] ; then
            alias cur_func="${func_name}"
            shift
            cur_func $@
        else
            $@
        fi
    fi
 
    if [[ ${is_verbose_mode} != "0" ]] ; then
        # dumpinfox "---------------------------------------------------------------------------------------------------- " 
        dumpinfo "run on ${envMode} : `hostname`"                                                                        
        dumpinfo "generated by ${BASH_SOURCE[0]}:$LINENO "                                                               
        if [[ -f "$1" ]] ; then
            dumpinfo "raw cmd : source $* "                                                                              
            dumpinfo "source : ${brown}$*${end}"
        else
            dumpinfo "raw cmd : ${func_name} $* "                                                                        
            dumpinfo "Done : ${brown}$*${end}"
        fi
    fi
}  2>&1   |&  tee ${log_path}

if [[ ${is_verbose_mode} != "0" ]] ; then
    source ${BASH_DIR}/nvidia/bin/remove_color_from_log_file.sh ${log_path}
    dumpinfo "log    :${blue} ${brown}${log_path}${end}"
fi

bash_script_o